[{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ddemateis.github.io/dlim/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"https://ddemateis.github.io/dlim/articles/dlimOverview.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Distributed Lag Interaction Model Overview","text":"latest version package GitHub can downloaded installed install_github(\"ddemateis/dlim\") CRAN install.packages(\"dlim\") package can loaded ","code":"library(dlim) #> This is dlim 0.2.0. For details: help(`dlim-package`) and vignette('dlimOverview')."},{"path":"https://ddemateis.github.io/dlim/articles/dlimOverview.html","id":"methodology-and-applications","dir":"Articles","previous_headings":"","what":"Methodology and Applications","title":"Distributed Lag Interaction Model Overview","text":"See Demateis et al. 2024 details methodology applications.","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/articles/dlimOverview.html","id":"the-function-dlim","dir":"Articles","previous_headings":"Functions in the package","what":"The function dlim()","title":"Distributed Lag Interaction Model Overview","text":"fit DLIM using package, first use dlim() function, creates cross-basis using cross_basis() function fits GAM using using cross-basis. dlim() takes vector response values, y, matrix exposure history, x, modifier variable, modifier, matrix covariates, z. include modifier z, dlim() add modifier covariate matrix later function. also need specify degrees freedom modifier basis, df_m, exposure time basis, df_l. can optionally specify whether penalize, penalize = T penalize = F, though function default penalize = T. recommend specifying method = \"REML\" penalizing. data set large, can set fit_fn = \"bam\" dlim() uses bam() instead gam() model fitting. See ?bam details.","code":""},{"path":"https://ddemateis.github.io/dlim/articles/dlimOverview.html","id":"the-function-predict","dir":"Articles","previous_headings":"Functions in the package","what":"The function predict()","title":"Distributed Lag Interaction Model Overview","text":"using dlim() function fit DLIM, can use predict() make predictions confidence intervals set modifying values. predict() S3 method objects class dlim takes object class dlim, object, type prediction, type = \"DLF\" predict distributed lag function point-wise effects set modifier, type = \"CE\" predict cumulative effects set modifiers, type = c(\"CE\", \"DLF\") predict distributed lag function cumulative effect. can pass new vector modifier values newdata. left NULL, prediction original modifier values. confidence level can changed using alpha.","code":""},{"path":"https://ddemateis.github.io/dlim/articles/dlimOverview.html","id":"the-function-plot_cumulative","dir":"Articles","previous_headings":"Functions in the package","what":"The function plot_cumulative()","title":"Distributed Lag Interaction Model Overview","text":"using dlim() function fit DLIM, can use plot_cumulative() function plot cumulative effects confidence regions set modifying values. plot_cumulative() takes vector modifying values, new_modifiers, object class dlim, mod_fit. Optionally, can provide name modifier plot axis label, mod_name, back-transformation function mod_trans specified modifier values transformed. function also ability compare DLM fit DLIM fit. dlm_fit argument passed list containing crossbasis object dlnm package fitted DLM model object, plot also include estimated cumulative effects confidence region modifying values DLM. model family Gaussian, specify transformation function using link_trans.","code":""},{"path":"https://ddemateis.github.io/dlim/articles/dlimOverview.html","id":"the-function-plot_dlf","dir":"Articles","previous_headings":"Functions in the package","what":"The function plot_DLF()","title":"Distributed Lag Interaction Model Overview","text":"using dlim() function fit DLIM, can use plot_DLF() function create grid plots estimated point-wise effects (.e. estimated distributed lag function) confidence regions set modifying values. plot_DLF() takes vector modifying values, new_modifiers, object class dlim, mod_fit, whether create grid plots modifier value, plot_by = \"modifier\", particular time points, plot_by = \"time\". want plot grid time point, must pass time_pts vector time points. Optionally, can provide name modifier plot axis label, mod_name, back-transformation function specified modifier values transformed. function also ability compare DLM fit DLIM fit. dlm_fit argument passed list containing crossbasis object dlnm package fitted DLM model object, plot also include estimated cumulative effects confidence region modifying values DLM. model family Gaussian, specify transformation function using link_trans.","code":""},{"path":"https://ddemateis.github.io/dlim/articles/dlimOverview.html","id":"the-function-model_comparison","dir":"Articles","previous_headings":"Functions in the package","what":"The function model_comparison()","title":"Distributed Lag Interaction Model Overview","text":"can use model_comparison function compare models without interaction, models varying levels interaction. See Demateis et al. 2024 discussion. model_comparison function takes dlim object (must fit REML) fit argument. fit object full model. Specify null model, either null = \"DLM\" null = \"linear\" currently supported. x exposure matrix used fit fit, B number bootstrap samples, conf.level confidence level default 0.95. function returns decision reject fail reject based confidence level.","code":""},{"path":"https://ddemateis.github.io/dlim/articles/dlimOverview.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Distributed Lag Interaction Model Overview","text":"Using example data set package, fit DLIM using dlim() function. First load data set: data set list containing response ($y), exposure history ($exposure), modifier ($modifier), covariates ($z). Now fit DLIM using dlim function: Note specifying method = \"REML along penalization. can quickly look object printing : tells us GAM fit using Gaussian family identity link function, 10 degrees freedom bases, number exposure time points 37, model fit using penalization. see predicted cumulative point-wise effects, can use predict() function. Specify type=\"CE\" obtain cumulative effect estimates, type=\"DLF\" obtain point-wise effect estimates, type=c(\"CE\",\"DLF\") obtain . order matter. following gives cumulative effect estimates modifier value 0.5, along upper lower confidence intervals: following gives point-wise effect estimates modifier value 0.5, along upper lower confidence intervals: can also create plots cumulative effects point-wise effects. following plots estimated cumulative effects grid modifier values:  two ways look estimated point-wise effects: modifier time. create grid estimated point-wise effect plots select number time points, specify plot_by = time provide select time points time_pts. following plots estimated point-wise effects across grid modifiers isolated weeks 10, 20, 30:  create grid estimated point-wise effect plots select number modifier values, specify plot_by = modifier provide select modifier values new_modifiers. following plots estimated point-wise effects across time points isolated modifier values 0.25, 0.5, 0.75:  can compare model standard DLM using model_comparison function. full model dlim_fit model object, null model default \"DLM\". specify exposure used create dlim_fit number bootstrap samples, B = 5 (recommend using least 1000 bootstrap samples, use 5 illustrate quickly). function returns decision reject fail reject null model based default confidence level conf.level 0.95.","code":"data(\"ex_data\") str(ex_data) #> List of 4 #>  $ y       : num [1:1000, 1] 21.4 25.4 22.7 27.2 23.5 ... #>  $ exposure:Classes 'data.table' and 'data.frame':   1000 obs. of  37 variables: #>   ..$ PM25_1 : num [1:1000] 11.07 4.84 12.58 14.68 11.36 ... #>   ..$ PM25_2 : num [1:1000] 13.15 5.85 14.35 16.41 9.4 ... #>   ..$ PM25_3 : num [1:1000] 11.17 5.9 20.8 18.95 8.62 ... #>   ..$ PM25_4 : num [1:1000] 7.56 5.36 14.85 11.54 6.67 ... #>   ..$ PM25_5 : num [1:1000] 22.71 5.28 10.67 8.23 9.31 ... #>   ..$ PM25_6 : num [1:1000] 11.4 5.62 9.44 16.92 7.47 ... #>   ..$ PM25_7 : num [1:1000] 7.56 6.98 16.63 7.9 10.18 ... #>   ..$ PM25_8 : num [1:1000] 8.74 5.41 7.37 12.55 10.77 ... #>   ..$ PM25_9 : num [1:1000] 11.03 6.02 13.76 10.69 10.91 ... #>   ..$ PM25_10: num [1:1000] 7.01 6.83 10 6.38 10.38 ... #>   ..$ PM25_11: num [1:1000] 8.45 9.88 6.43 7.84 8.11 ... #>   ..$ PM25_12: num [1:1000] 6.51 8.76 7.74 9.32 10.43 ... #>   ..$ PM25_13: num [1:1000] 10.21 9.4 9.25 10.92 6.96 ... #>   ..$ PM25_14: num [1:1000] 6.23 9.04 10.99 6.77 8.7 ... #>   ..$ PM25_15: num [1:1000] 7.69 9.94 7.29 6.73 10.18 ... #>   ..$ PM25_16: num [1:1000] 9.8 10.36 6.7 9.97 13.58 ... #>   ..$ PM25_17: num [1:1000] 8.4 10.87 10.29 7.69 12.29 ... #>   ..$ PM25_18: num [1:1000] 7.12 7.8 7.17 7.48 14.43 ... #>   ..$ PM25_19: num [1:1000] 7.26 11.51 7.33 6.51 13.51 ... #>   ..$ PM25_20: num [1:1000] 8.71 9.42 7.01 11.32 10.4 ... #>   ..$ PM25_21: num [1:1000] 6.63 7.6 11.68 8.16 9.01 ... #>   ..$ PM25_22: num [1:1000] 10.48 10.42 7.17 5.55 9.79 ... #>   ..$ PM25_23: num [1:1000] 9.16 11.35 6.39 12.78 8.78 ... #>   ..$ PM25_24: num [1:1000] 11.65 8.91 14.66 14.39 12.97 ... #>   ..$ PM25_25: num [1:1000] 13.86 11.61 11.68 9.42 7.31 ... #>   ..$ PM25_26: num [1:1000] 6.84 6.57 10.32 9.14 4.9 ... #>   ..$ PM25_27: num [1:1000] 12.68 7.59 9.3 14.54 8.29 ... #>   ..$ PM25_28: num [1:1000] 8.83 8.7 15.13 11.79 7.29 ... #>   ..$ PM25_29: num [1:1000] 9.09 6.27 11.55 11.31 10.24 ... #>   ..$ PM25_30: num [1:1000] 11.12 8.83 11.69 12.86 6.72 ... #>   ..$ PM25_31: num [1:1000] 8.34 7.71 11.14 9.23 7.81 ... #>   ..$ PM25_32: num [1:1000] 7.58 8.8 11.96 14.72 8.03 ... #>   ..$ PM25_33: num [1:1000] 10.08 7.18 11.98 13.78 7.02 ... #>   ..$ PM25_34: num [1:1000] 11.88 9.19 14.53 13.28 7.86 ... #>   ..$ PM25_35: num [1:1000] 7.14 5.94 13.38 8.76 8.23 ... #>   ..$ PM25_36: num [1:1000] 7 6 7.88 11.14 7.75 ... #>   ..$ PM25_37: num [1:1000] 7.22 8.13 13.02 19.72 11.41 ... #>  $ modifier: num [1:1000] 0.141 0.605 0.375 0.703 0.833 ... #>  $ z       : num [1:1000, 1:3] -1.462 -0.44 0.941 0.969 1.708 ... dlim_fit <- dlim(y = ex_data$y,                   x = ex_data$exposure,                   modifier = ex_data$modifier,                   z = ex_data$z,                   df_m = 10,                   df_l = 10,                   method = \"REML\") dlim_fit #> Object of class dlim  #>  #> Family: gaussian  #> Link function: identity  #>  #> dlim(y = ex_data$y, x = ex_data$exposure, modifiers = ex_data$modifier,  #>     z = ex_data$z, df_m = 10, df_l = 10, method = \"REML\") #> Modifier basis degrees of freedom: 10  #> Exposure time basis degrees of freedom: 10  #>   #> Number of exposure time points: 37  #>   #> Penalization: Yes  #>   #> n = 1000 dlim_pred <- predict(dlim_fit,                       newdata = 0.5,                       type=\"CE\") data.frame(cumul_betas = c(dlim_pred$est_dlim$betas_cumul),            LB = c(dlim_pred$est_dlim$cumul_LB),            UB = c(dlim_pred$est_dlim$cumul_UB)) #>   cumul_betas       LB       UB #> 1    2.521887 2.465761 2.578014 dlim_pred <- predict(dlim_fit,                       newdata = 0.5,                       type=\"DLF\") data.frame(betas = c(dlim_pred$est_dlim$betas),            LB = c(dlim_pred$est_dlim$LB),            UB = c(dlim_pred$est_dlim$UB)) #>          betas            LB         UB #> 1  0.015493436 -0.0088212123 0.03980809 #> 2  0.012681762 -0.0038701390 0.02923366 #> 3  0.009452520 -0.0034498292 0.02235487 #> 4  0.006252764 -0.0055033865 0.01800891 #> 5  0.003529548 -0.0090522753 0.01611137 #> 6  0.001729924 -0.0119363763 0.01539622 #> 7  0.001305969 -0.0117704259 0.01438236 #> 8  0.002738391 -0.0086632348 0.01414002 #> 9  0.006518027 -0.0042045510 0.01724061 #> 10 0.013135728  0.0012408808 0.02503058 #> 11 0.023082344  0.0098801793 0.03628451 #> 12 0.036766674  0.0240577371 0.04947561 #> 13 0.053832923  0.0429503442 0.06471550 #> 14 0.073509141  0.0636647488 0.08335353 #> 15 0.095019208  0.0842061010 0.10583231 #> 16 0.117587005  0.1053237412 0.12985027 #> 17 0.140398284  0.1282795013 0.15251707 #> 18 0.162011780  0.1515156855 0.17250787 #> 19 0.180472918  0.1710107331 0.18993510 #> 20 0.193812020  0.1833817000 0.20424234 #> 21 0.200059408  0.1879785198 0.21214030 #> 22 0.197301455  0.1849772032 0.20962571 #> 23 0.185529686  0.1745899300 0.19646944 #> 24 0.167062793  0.1572475206 0.17687807 #> 25 0.144360981  0.1338786290 0.15484333 #> 26 0.119884457  0.1078931310 0.13187578 #> 27 0.096085930  0.0837886022 0.10838326 #> 28 0.074669984  0.0637996782 0.08554029 #> 29 0.055966672  0.0463572346 0.06557611 #> 30 0.040158546  0.0298310819 0.05048601 #> 31 0.027428157  0.0152862404 0.03957007 #> 32 0.017957869  0.0049832833 0.03093246 #> 33 0.011768375 -0.0005820517 0.02411880 #> 34 0.008423399 -0.0036475010 0.02049430 #> 35 0.007406503 -0.0059269186 0.02073992 #> 36 0.008201245 -0.0082854634 0.02468795 #> 37 0.010291185 -0.0133044965 0.03388687 plot_cumulative(new_modifiers = seq(0.1,0.9,0.1),                  mod_fit = dlim_fit,                  mod_name = \"modifier\") plot_DLF(new_modifiers = seq(0.1,0.9,0.1),           mod_fit = dlim_fit,           mod_name = \"modifier\",           plot_by = \"time\",           time_pts = c(10,20,30)) plot_DLF(new_modifiers = c(0.25, 0.5, 0.75),          mod_fit = dlim_fit,           mod_name = \"modifier\",           plot_by = \"modifier\") model_comparison(fit = dlim_fit,                   null = \"DLM\",                  x = exposure,                   B = 5) #>      95%  #> \"reject\""},{"path":[]},{"path":[]},{"path":"https://ddemateis.github.io/dlim/articles/dlimOverview.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Distributed Lag Interaction Model Overview","text":"Demateis, D., Keller, K. P., Rojas-Rueda, D., Kioumourtzoglou, M.-., & Wilson, . (2024). Penalized distributed lag interaction model: Air pollution, birth weight, neighborhood vulnerability. Environmetrics, e2843. https://doi.org/10.1002/env.2843","code":""},{"path":"https://ddemateis.github.io/dlim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Danielle Demateis. Author, maintainer. Kayleigh Keller. Author. Ander Wilson. Author.","code":""},{"path":"https://ddemateis.github.io/dlim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Demateis D, Keller K, Wilson (2024). dlim: Distributed Lag Interaction Model. R package version 0.2.0, https://github.com/ddemateis/dlim, https://ddemateis.github.io/dlim/. Demateis D, Keller KP, Rojas-Rueda D, Kioumourtzoglou M, Wilson (2024). “Penalized distributed lag interaction model: Air pollution, birth weight, neighborhood vulnerability.” Environmetrics. doi:10.1002/env.2843.","code":"@Manual{,   title = {dlim: Distributed Lag Interaction Model},   author = {Danielle Demateis and Kayleigh Keller and Ander Wilson},   year = {2024},   note = {R package version 0.2.0, https://github.com/ddemateis/dlim},   url = {https://ddemateis.github.io/dlim/}, } @Article{,   title = {Penalized distributed lag interaction model: Air pollution, birth weight, and neighborhood vulnerability},   author = {Danielle Demateis and Kayleigh P. Keller and David Rojas-Rueda and Marianthi-Anna Kioumourtzoglou and Ander Wilson},   year = {2024},   journal = {Environmetrics},   doi = {10.1002/env.2843}, }"},{"path":[]},{"path":"https://ddemateis.github.io/dlim/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Distributed Lag Interaction Model","text":"repository contains source files dlim R package implements distributed lag interaction models described paper: Demateis D, Keller KP, Rojas-Rueda D, Kioumourtzoglou M-, Wilson (2024). “Penalized Distributed Lag Interaction Model: Air Pollution, Birth Weight Neighborhood Vulnerability.” Environmetrics. (DOI: 10.1002/env.2843, arXiv preprint) Simulation scripts manuscript can found https://github.com/ddemateis/dlim_simulations. dlim package estimates distributed lag model modification single continuous factor. instead interested DLM modification single categorical binary variable see bdlim package. interested distributed lag models heterogeneity multiple modifiers see heterogeneous distributed lag model dlmtree package.","code":""},{"path":"https://ddemateis.github.io/dlim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Distributed Lag Interaction Model","text":"Install CRAN: Install GitHub: vignette available package website package using following code.","code":"install.packages(\"dlim\") remotes::install_github(\"ddemateis/dlim\") vignette('dlimOverview')"},{"path":"https://ddemateis.github.io/dlim/reference/cross_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Build crossbasis — cross_basis","title":"Build crossbasis — cross_basis","text":"Creates cross-basis using natural splines regression DLIM","code":""},{"path":"https://ddemateis.github.io/dlim/reference/cross_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build crossbasis — cross_basis","text":"","code":"cross_basis(   x,   M,   L = NULL,   argmod = list(),   arglag = list(),   model_type = \"standard\" )"},{"path":"https://ddemateis.github.io/dlim/reference/cross_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build crossbasis — cross_basis","text":"x numeric time series vector length n matrix lagged exposures (columns) n individuals (rows) M vector length n containing modifier values L numeric vector length 1 containing number lag terms. required x vector, used x matrix. argmod list: $fun spline function modifier (\"ps\" \"cr\" penalize), $arg list arguments spline function (must named argument), $df degrees freedom, $sp optional smoothing parameter arglag list: $fun spline function lag (\"ps\" \"cr\" penalize), $arg list arguments spline function (must named argument), $df degrees freedom, $sp optional smoothing parameter model_type \"linear\" DLIM linear interaction, \"quadratic\" DLIM quadratic interaction, \"standard\" DLIM splines","code":""},{"path":"https://ddemateis.github.io/dlim/reference/cross_basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build crossbasis — cross_basis","text":"function returns list 5 6 elements: cb cross-basis (matrix) B_lag lag basis (basis matrix) B_mod modifier basis (basis matrix) df_l lag degrees freedom (numeric) df_m modifier degrees freedom (numeric) L number lags (numeric) Slist lag modifier penalty matrices, penalizing (list)","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/reference/dlim-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Distributed Lag Interaction Model (DLIM) — dlim-package","title":"Distributed Lag Interaction Model (DLIM) — dlim-package","text":"package dlim contains functions fit, perform inference estimation , visualize distributed lag interaction model (DLIM).","code":""},{"path":"https://ddemateis.github.io/dlim/reference/dlim-package.html","id":"modelling-framework","dir":"Reference","previous_headings":"","what":"Modelling framework","title":"Distributed Lag Interaction Model (DLIM) — dlim-package","text":"distributed lag interaction model (DLIM) extension distributed lag model. DLIM regresses outcome onto repeated measures exposure allows associations vary single continuous modifier. details methodology provided reference listed .","code":""},{"path":"https://ddemateis.github.io/dlim/reference/dlim-package.html","id":"functions-and-data-included-in-the-package","dir":"Reference","previous_headings":"","what":"Functions and data included in the package","title":"Distributed Lag Interaction Model (DLIM) — dlim-package","text":"fit DLIM using package, use dlim function, calls cross_basis function create cross-basis estimates regression coefficients using gam mgcv package. predict.dlim S3 function provides point-wise cumulative effect estimates uncertainty measures. plot_DLF plot_cumulative functions provide plots modified distributed lag functions cumulative effect estimate curve.","code":""},{"path":"https://ddemateis.github.io/dlim/reference/dlim-package.html","id":"additional-information","dir":"Reference","previous_headings":"","what":"Additional information","title":"Distributed Lag Interaction Model (DLIM) — dlim-package","text":"Additonal details package dlim available vignette, available typing: vignette(\"dlimOverview\") dlim package available Comprehensive R Archive Network (CRAN). development website available GitHub (github.com/ddemateis/dlim). Please use citation(\"dlim\") cite package.","code":""},{"path":"https://ddemateis.github.io/dlim/reference/dlim-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Distributed Lag Interaction Model (DLIM) — dlim-package","text":"Danielle Demateis, Kayleigh Keller, Ander Wilson Maintainer: Danielle Demateis <Danielle.Demateis@colostate.edu>","code":""},{"path":"https://ddemateis.github.io/dlim/reference/dlim-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Distributed Lag Interaction Model (DLIM) — dlim-package","text":"Demateis et al. (2024) <doi:10.1002/env.2843>, avaibable (arxiv.org/abs/2401.02939).","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/reference/dlim.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit DLIM — dlim","title":"Fit DLIM — dlim","text":"Fit distributed lag interaction model","code":""},{"path":"https://ddemateis.github.io/dlim/reference/dlim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit DLIM — dlim","text":"","code":"dlim(   y,   x,   modifiers,   z = NULL,   df_m = NULL,   df_l,   penalize = TRUE,   pen_fn = \"ps\",   mod_args = NULL,   lag_args = NULL,   fit_fn = \"gam\",   model_type = \"standard\",   ID = NULL,   ... )"},{"path":"https://ddemateis.github.io/dlim/reference/dlim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit DLIM — dlim","text":"y vector response values (class \"numeric\") x matrix exposure history (columns) individuals (rows) (class \"matrix\") modifiers vector modifying values (class \"numeric\") z matrix covariates, including modifier (class \"matrix\") df_m degrees freedom modifier basis. specify linear modification (model_type = \"linear\") (class \"numeric\") df_l degrees freedom exposure time basis (class \"numeric\") penalize TRUE penalize model (class \"logical\") pen_fn penalizing, can specify \"ps\" penalized B-splines \"cr\" cubic regression splines penalties second derivatives mod_args list additional arguments spline function (must named argument) lag_args list additional arguments spline function (must named argument) fit_fn specify \"gam\" use gam function data sets large, specify \"bam\" use bam function data sets large. Default fit using gam. (class \"character\") model_type \"linear\" DLIM linear interaction, \"quadratic\" DLIM quadratic interaction, \"standard\" DLIM splines (class \"character\") ID group identifier random intercept, supported penalized models ... arguments pass model fitting function","code":""},{"path":"https://ddemateis.github.io/dlim/reference/dlim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit DLIM — dlim","text":"function returns list object class \"dlim\" following components cb cross-basis (class \"matrix\") fit model object (class \"lm\", \"glm\", \"gam\") modifiers modifying values (class \"numeric\") call model call","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/reference/dlim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit DLIM — dlim","text":"","code":"library(dlim) data(\"ex_data\") dlim_fit <- dlim(y = ex_data$y,                   x = ex_data$exposure,                   modifier = ex_data$modifier,                   z = ex_data$z,                   df_m = 10,                   df_l = 10,                   method = \"REML\") dlim_pred <- predict(dlim_fit,                       newdata = 0.5,                       type=\"CE\")"},{"path":"https://ddemateis.github.io/dlim/reference/ex_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data set — ex_data","title":"Example data set — ex_data","text":"Data set examples","code":""},{"path":"https://ddemateis.github.io/dlim/reference/ex_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data set — ex_data","text":"","code":"ex_data"},{"path":"https://ddemateis.github.io/dlim/reference/ex_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data set — ex_data","text":"List response, exposure, modifiers, covariates","code":""},{"path":"https://ddemateis.github.io/dlim/reference/ex_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data set — ex_data","text":"Simulated","code":""},{"path":"https://ddemateis.github.io/dlim/reference/ex_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example data set — ex_data","text":"","code":"data(ex_data) # lazy load"},{"path":"https://ddemateis.github.io/dlim/reference/exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Exposure data set for simulation — exposure","title":"Exposure data set for simulation — exposure","text":"Data set PM 2.5 exposure history 1000 individuals 37 weeks","code":""},{"path":"https://ddemateis.github.io/dlim/reference/exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exposure data set for simulation — exposure","text":"","code":"exposure"},{"path":"https://ddemateis.github.io/dlim/reference/exposure.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Exposure data set for simulation — exposure","text":"data frame 1000 rows 37 columns","code":""},{"path":"https://ddemateis.github.io/dlim/reference/exposure.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Exposure data set for simulation — exposure","text":"Data source??","code":""},{"path":"https://ddemateis.github.io/dlim/reference/exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exposure data set for simulation — exposure","text":"","code":"data(exposure) # lazy load"},{"path":"https://ddemateis.github.io/dlim/reference/model_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Comparison — model_comparison","title":"Model Comparison — model_comparison","text":"Compare models test interaction","code":""},{"path":"https://ddemateis.github.io/dlim/reference/model_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Comparison — model_comparison","text":"","code":"model_comparison(fit, null = \"DLM\", x, B, conf.level = 0.95)"},{"path":"https://ddemateis.github.io/dlim/reference/model_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Comparison — model_comparison","text":"fit dlim object (must fit REML) null \"DLM\", \"linear\" specify null model x exposure B number bootstrap samples conf.level confidence level (class \"numeric\")","code":""},{"path":"https://ddemateis.github.io/dlim/reference/model_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Comparison — model_comparison","text":"function returns decision either reject fail reject null model","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/reference/plot_DLF.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Cumulative Effects — plot_DLF","title":"Plot Cumulative Effects — plot_DLF","text":"Plot estimated cumulative effects DLIM object, can also compare estimated cumulative effects DLM DLIM","code":""},{"path":"https://ddemateis.github.io/dlim/reference/plot_DLF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Cumulative Effects — plot_DLF","text":"","code":"plot_DLF(   new_modifiers,   mod_fit,   mod_name,   dlm_fit = NULL,   plot_by,   time_pts = NULL,   mod_trans = NULL,   link_trans = NULL )"},{"path":"https://ddemateis.github.io/dlim/reference/plot_DLF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Cumulative Effects — plot_DLF","text":"new_modifiers vector new modifier values prediction (class \"numeric\") mod_fit DLIM model object (class \"dlim\") mod_name modifier name follows variable name nomenclature (class \"character\") dlm_fit list containing crossbasis object dlnm package first element DLM model object second element (class \"list\") plot_by choose create plots particular modifier values, \"modifier\", particular time points, \"time\", (class \"character\") time_pts set time points plotting time (class \"numeric\") mod_trans modifiers transformed, specify back transformation function (class \"character\") link_trans family glm Gaussian, specify back transformation undo link function (class \"character\")","code":""},{"path":"https://ddemateis.github.io/dlim/reference/plot_DLF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Cumulative Effects — plot_DLF","text":"function returns ggplot point-wise effects isolated either time points modifier, including DLM specified","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/reference/plot_cumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Distributed Lag Function — plot_cumulative","title":"Plot Distributed Lag Function — plot_cumulative","text":"Plot estimated distributed lag function values DLIM object, can also compare DLM","code":""},{"path":"https://ddemateis.github.io/dlim/reference/plot_cumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Distributed Lag Function — plot_cumulative","text":"","code":"plot_cumulative(   new_modifiers,   mod_fit,   dlm_fit = NULL,   mod_name = NULL,   mod_trans = NULL,   link_trans = NULL )"},{"path":"https://ddemateis.github.io/dlim/reference/plot_cumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Distributed Lag Function — plot_cumulative","text":"new_modifiers vector new modifier values prediction (class \"numeric\") mod_fit DLIM model object (class \"dlim\") dlm_fit list containing crossbasis object dlnm package first element DLM model object second element (class \"list\") mod_name modifier name (character) mod_trans modifiers transformed, specify back transformation function (class \"character\") link_trans family glm Gaussian, specify back transformation undo link function (class \"character\")","code":""},{"path":"https://ddemateis.github.io/dlim/reference/plot_cumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Distributed Lag Function — plot_cumulative","text":"function returns ggplot cumulative effects, including DLM specified","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/reference/predict.dlim.html","id":null,"dir":"Reference","previous_headings":"","what":"DLIM Predictions — predict.dlim","title":"DLIM Predictions — predict.dlim","text":"Predicted values based dlim object.","code":""},{"path":"https://ddemateis.github.io/dlim/reference/predict.dlim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DLIM Predictions — predict.dlim","text":"","code":"# S3 method for dlim predict(   object,   newdata = NULL,   type = c(\"DLF\", \"CE\", \"response\"),   conf.level = 0.95,   ... )"},{"path":"https://ddemateis.github.io/dlim/reference/predict.dlim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DLIM Predictions — predict.dlim","text":"object object class \"dlim\" newdata vector new modifier values prediction (class \"numeric\") type Type prediction. \"DLF\" estimated distributed lag functions, \"CE\" cumulative effects, \"response\" fitted values, combination vector (class \"character\") conf.level confidence level (class \"numeric\") ... additional arguments affecting predictions produced","code":""},{"path":"https://ddemateis.github.io/dlim/reference/predict.dlim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DLIM Predictions — predict.dlim","text":"function returns list 3 elements: est_dlim cumulative /point-wise estimates, standard errors, confidence intervals (class \"list\") cb cross-basis object (class \"cross-basis\") model model object (class \"gam\")","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/reference/predict.sim_dlim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated DLIM Predictions — predict.sim_dlim","title":"Simulated DLIM Predictions — predict.sim_dlim","text":"function estimates cumulative non-cumulative lag/modifier coefficients model response regressed cross-basis generated cross_basis() function.","code":""},{"path":"https://ddemateis.github.io/dlim/reference/predict.sim_dlim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated DLIM Predictions — predict.sim_dlim","text":"","code":"# S3 method for sim_dlim predict(object, newdata = NULL, type = c(\"DLF\", \"CE\", \"response\"), ...)"},{"path":"https://ddemateis.github.io/dlim/reference/predict.sim_dlim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulated DLIM Predictions — predict.sim_dlim","text":"object object class \"dlim\" newdata vector modifiers inference (class \"numeric\") type Type prediction. \"response\" predicted responses, \"DLF\" estimated distributed lag functions, \"CE\" cumulative effects (class \"character\") ... additional arguments affecting predictions produced","code":""},{"path":"https://ddemateis.github.io/dlim/reference/predict.sim_dlim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulated DLIM Predictions — predict.sim_dlim","text":"function returns list 4 7 elements: est_dlim est_dlim element predict.dlim (class \"list\") cb cross-bais object (class \"cross-basis\") fit fit object (class \"lm\", \"glm\", \"gam\") true_betas true_betas object (class \"matrix\") cb_dlm cb_dlm object (class \"crosspred\") model_dlm model_dlm object (class \"lm\", \"glm\", \"gam\") est_dlm cumulative /point-wise estimates, standard errors, confidence intervals DLM (class \"list\")","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/reference/print.dlim.html","id":null,"dir":"Reference","previous_headings":"","what":"Print DLIM Information — print.dlim","title":"Print DLIM Information — print.dlim","text":"prints information object class dlim","code":""},{"path":"https://ddemateis.github.io/dlim/reference/print.dlim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print DLIM Information — print.dlim","text":"","code":"# S3 method for dlim print(x, ...)"},{"path":"https://ddemateis.github.io/dlim/reference/print.dlim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print DLIM Information — print.dlim","text":"x dlim object ... arguments passed methods","code":""},{"path":"https://ddemateis.github.io/dlim/reference/print.dlim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print DLIM Information — print.dlim","text":"function returns information object class dlim","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/reference/sim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data — sim_data","title":"Simulate Data — sim_data","text":"Simulate data use dlim package. different effect modification scenarios choose simulation.","code":""},{"path":"https://ddemateis.github.io/dlim/reference/sim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data — sim_data","text":"","code":"sim_data(   x,   L = NULL,   modifiers,   noise = 1,   type = 2,   SNR,   ncovariates = 0,   gamma = 1 )"},{"path":"https://ddemateis.github.io/dlim/reference/sim_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data — sim_data","text":"x time series vector length n matrix lagged exposures n individuals (class \"numeric\", \"matrix\") L vector length 1 containing number lag terms. required x vector, used x matrix (class \"numeric\") modifiers vector length n containing modifying values (class \"numeric\") noise vector length 1 containing standard deviation normal distribution mean 0 used add noise simulated response values. Must proivde SNR provided (class \"numeric\") type vector containing number 1, 2, 3, 4 simulation modification type: none, linear, non-linear shift, non-linear shift linear scale (class \"numeric\") SNR signal--noise ratio. SNR provided, noise , noise reset standard deviation response, adding noise.   (class \"numeric\") ncovariates number covariates add model, numeric vector length 1. gamma True coefficient main effect modifier (class \"numeric\")","code":""},{"path":"https://ddemateis.github.io/dlim/reference/sim_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data — sim_data","text":"returns list 8 items: x lagged exposure matrix. x matrix, unchanged. (class \"matrix\") L numeric vector length 1 containing number lag terms (class \"numeric\") modifiers modifiers argument (class \"numeric\") y numeric vector length nrow(x) containing perturbed simulated response values. (class \"numeric\") betas matrix containing true coefficients lag/modifier combination, row representing lag column modifier (class \"matrix\") betas_cumul numeric vector length L+1 containing cumulative true coefficients lag terms, summed modifiers (class \"numeric\") Z covariates (class \"matrix\") gammas true coefficients covariates (class \"numeric\")","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/reference/sim_dlf.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Distributed Lag Functions — sim_dlf","title":"Simulate Distributed Lag Functions — sim_dlf","text":"generate true distributed lag function values given type simulation","code":""},{"path":"https://ddemateis.github.io/dlim/reference/sim_dlf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Distributed Lag Functions — sim_dlf","text":"","code":"sim_dlf(L, modifiers, type)"},{"path":"https://ddemateis.github.io/dlim/reference/sim_dlf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Distributed Lag Functions — sim_dlf","text":"L Number lags minus 1 modifiers Vector modifiers type Effect modification simulation type: 1 modification, 2 linear scale modification, 3 non-linear shift modification, 4 types 2 3 combined","code":""},{"path":"https://ddemateis.github.io/dlim/reference/sim_dlf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Distributed Lag Functions — sim_dlf","text":"function returns true distributed lag function values (class \"numeric\")","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/reference/sim_dlim.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit DLIM for simulation — sim_dlim","title":"Fit DLIM for simulation — sim_dlim","text":"Fit DLIM simulation","code":""},{"path":"https://ddemateis.github.io/dlim/reference/sim_dlim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit DLIM for simulation — sim_dlim","text":"","code":"sim_dlim(   data,   df_m,   df_l,   penalize = TRUE,   pen_fn = \"ps\",   mod_args = NULL,   lag_args = NULL,   fit_dlm = FALSE,   model_type = \"standard\",   ... )"},{"path":"https://ddemateis.github.io/dlim/reference/sim_dlim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit DLIM for simulation — sim_dlim","text":"data output sim_data df_m degrees freedom modifiers df_l degrees freedom lags penalize True penalize model pen_fn penalizing, can specify \"ps\" penalized B-splines \"cr\" cubic regression splines penalties second derivatives mod_args list additional arguments spline function (must named argument) lag_args list additional arguments spline function (must named argument) fit_dlm True additionally fit dlm comparison model_type \"linear\" DLIM linear interaction, \"quadratic\" DLIM quadratic interaction, \"standard\" DLIM splines ... arguments pass model fitting function","code":""},{"path":"https://ddemateis.github.io/dlim/reference/sim_dlim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit DLIM for simulation — sim_dlim","text":"function returns object class \"sim_dlim\" cb DLIM cross-basis (class \"cross-basis\") fit DLIM model fit (class \"lm\", \"glm\", \"gam\") cb_dlm DLM cross-basis (class \"crossbasis\") model_dlm DLM model fit (class \"lm\", \"glm\", \"gam\") true_betas true linear effect exposure response individual time point (class \"matrix\") modifiers modifiers numeric data data (class \"list\")","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/reference/summary.dlim.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing DLIM — summary.dlim","title":"Summarizing DLIM — summary.dlim","text":"prints summary object class dlim","code":""},{"path":"https://ddemateis.github.io/dlim/reference/summary.dlim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing DLIM — summary.dlim","text":"","code":"# S3 method for dlim summary(object, ...)"},{"path":"https://ddemateis.github.io/dlim/reference/summary.dlim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing DLIM — summary.dlim","text":"object dlim object ... additional arguments affecting summary produced","code":""},{"path":"https://ddemateis.github.io/dlim/reference/summary.dlim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing DLIM — summary.dlim","text":"function returns summary object class dlim","code":""},{"path":[]},{"path":"https://ddemateis.github.io/dlim/news/index.html","id":"dlim-020","dir":"Changelog","previous_headings":"","what":"dlim 0.2.0","title":"dlim 0.2.0","text":"Update dlim function, removing requirement pass df_m linear modification model","code":""},{"path":"https://ddemateis.github.io/dlim/news/index.html","id":"dlim-010","dir":"Changelog","previous_headings":"","what":"dlim 0.1.0","title":"dlim 0.1.0","text":"CRAN release: 2024-02-29 Added NEWS.md file track changes package.","code":""}]
